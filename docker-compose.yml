services:

  # Conteneur avec SSH 
  devops2025:
    build: ./server  
    container_name: devops2025
    image: devops2025-image
    ports:
      - "2222:22" 
    volumes:
      - ./server:/app  
    networks:
      - fbrain_network 
    environment:
      - TZ=Europe/Paris
    stdin_open: true
    tty: true

  # Conteneur pour l'application React (client)
  client:
    build: ./client  
    container_name: react-app
    ports:
       - "5174:80"  
    networks:
      - fbrain_network
    environment:
      - TZ=Europe/Paris

  server:
    build: ./server 
    container_name: django-server
    ports:
      - "8081:8000"  
    networks:
      - fbrain_network
    environment:
      - TZ=Europe/Paris
    env_file:
    - ./server/.env

  # Conteneur pour la base de donn√©es PostgreSQL
  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_DB: fbrain_db
      POSTGRES_USER: fbrain_user
      POSTGRES_PASSWORD: fbrain_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fbrain_network

  # Conteneur pour Prometheus 
  prometheus:
    build: ./monitoring/prometheus
    container_name: prometheus
    ports:
      - "9090:9090" 
    networks:
      - fbrain_network
    environment:
      - TZ=Europe/Paris

  # Conteneur pour Grafana (Monitoring)
  grafana:
    build: ./monitoring/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - fbrain_network
    environment:
      - TZ=Europe/Paris

  # Conteneur pour Nginx 
  proxy:
    build: ./proxy  
    container_name: nginx-proxy
    ports:
      - "80:80"  
      - "443:443"  
    networks:
      - fbrain_network
    environment:
      - TZ=Europe/Paris

networks:
  fbrain_network:
    driver: bridge

volumes:
  postgres_data:



